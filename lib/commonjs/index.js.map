{"version":3,"names":["_reactNative","require","_ApiCall","LINKING_ERROR","Platform","select","ios","default","WaivpayKartaSdk","NativeModules","Proxy","get","Error","addCard","cardId","cardSuffix","cardHolder","env","deliveryEmail","appId","accessToken","config","getConfig","custHeader","url","headers","host","cardExists","checkIfReadyToPay","jsonReq","environment","startBeacon","sessionToken","shop","updateToken","beaconLogRequest","requestUrl"],"sources":["index.tsx"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\nimport { getConfig } from './ApiCall';\n\nconst LINKING_ERROR =\n  `The package 'waivpay-karta-sdk' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\n  const WaivpayKartaSdk = NativeModules['WaivpayKartaSdk']\n  ? NativeModules['WaivpayKartaSdk']\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      }\n    );\n\nexport async function addCard(cardId: String, cardSuffix: String, cardHolder: String, env: String, deliveryEmail: String, appId: String, accessToken: String): Promise<String> {\n  const config = await getConfig();\n  var custHeader: {[key: string]: string} = {\"\":\"\"};\n  var url = \"\";\n  \n  if(config != null && config.headers != null)\n  {\n    custHeader = config.headers;\n  }\n  if(config != null && config.host != null && config.host != \"\"){\n    url = config.host\n  }\n  return WaivpayKartaSdk.addCard(cardId, cardSuffix, cardHolder, env, deliveryEmail, appId, accessToken, url, custHeader);\n}\n\nexport function cardExists(cardId: String): Promise<String> {\n  return WaivpayKartaSdk.cardExists(cardId);\n}\n\nexport function checkIfReadyToPay(jsonReq: String, environment: String): Promise<String> {\n  return WaivpayKartaSdk.checkIfReadyToPay(jsonReq, environment);\n  \n}\nexport function startBeacon(sessionToken: String, shop: String): Promise<String> {\n  return WaivpayKartaSdk.startBeacon(sessionToken, shop);\n}\n\nexport function updateToken(sessionToken: String): Promise<String> {\n  return WaivpayKartaSdk.updateToken(sessionToken);\n}\n\nexport function beaconLogRequest(requestUrl: String): Promise<String> {\n  return WaivpayKartaSdk.beaconLogRequest(requestUrl);\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAEA,MAAME,aAAa,GACjB,4EAA4E,GAC5EC,qBAAQ,CAACC,MAAM,CAAC;EAAEC,GAAG,EAAE,gCAAgC;EAAEC,OAAO,EAAE;AAAG,CAAC,CAAC,GACvE,sDAAsD,GACtD,6CAA6C;AAE7C,MAAMC,eAAe,GAAGC,0BAAa,CAAC,iBAAiB,CAAC,GACtDA,0BAAa,CAAC,iBAAiB,CAAC,GAChC,IAAIC,KAAK,CACP,CAAC,CAAC,EACF;EACEC,GAAGA,CAAA,EAAG;IACJ,MAAM,IAAIC,KAAK,CAACT,aAAa,CAAC;EAChC;AACF,CACF,CAAC;AAEE,eAAeU,OAAOA,CAACC,MAAc,EAAEC,UAAkB,EAAEC,UAAkB,EAAEC,GAAW,EAAEC,aAAqB,EAAEC,KAAa,EAAEC,WAAmB,EAAmB;EAC7K,MAAMC,MAAM,GAAG,MAAM,IAAAC,kBAAS,EAAC,CAAC;EAChC,IAAIC,UAAmC,GAAG;IAAC,EAAE,EAAC;EAAE,CAAC;EACjD,IAAIC,GAAG,GAAG,EAAE;EAEZ,IAAGH,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACI,OAAO,IAAI,IAAI,EAC3C;IACEF,UAAU,GAAGF,MAAM,CAACI,OAAO;EAC7B;EACA,IAAGJ,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACK,IAAI,IAAI,IAAI,IAAIL,MAAM,CAACK,IAAI,IAAI,EAAE,EAAC;IAC5DF,GAAG,GAAGH,MAAM,CAACK,IAAI;EACnB;EACA,OAAOlB,eAAe,CAACK,OAAO,CAACC,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,aAAa,EAAEC,KAAK,EAAEC,WAAW,EAAEI,GAAG,EAAED,UAAU,CAAC;AACzH;AAEO,SAASI,UAAUA,CAACb,MAAc,EAAmB;EAC1D,OAAON,eAAe,CAACmB,UAAU,CAACb,MAAM,CAAC;AAC3C;AAEO,SAASc,iBAAiBA,CAACC,OAAe,EAAEC,WAAmB,EAAmB;EACvF,OAAOtB,eAAe,CAACoB,iBAAiB,CAACC,OAAO,EAAEC,WAAW,CAAC;AAEhE;AACO,SAASC,WAAWA,CAACC,YAAoB,EAAEC,IAAY,EAAmB;EAC/E,OAAOzB,eAAe,CAACuB,WAAW,CAACC,YAAY,EAAEC,IAAI,CAAC;AACxD;AAEO,SAASC,WAAWA,CAACF,YAAoB,EAAmB;EACjE,OAAOxB,eAAe,CAAC0B,WAAW,CAACF,YAAY,CAAC;AAClD;AAEO,SAASG,gBAAgBA,CAACC,UAAkB,EAAmB;EACpE,OAAO5B,eAAe,CAAC2B,gBAAgB,CAACC,UAAU,CAAC;AACrD","ignoreList":[]}